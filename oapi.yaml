openapi: "3.0.0"
info:
  title: Definancy SDK
  version: 0.0.1.wip.20250623
  description: |-
    REST API for managing asset, network and contract configurations, and vault-based financial operations.

tags:
  - name: Probe
    description: |-
      Health monitoring endpoints for verifying service availability and operational status.
  - name: Network
    description: |-
      Network configuration and status management.
  - name: Asset
    description: |-
      Asset configuration and status management.
  - name: Contract
    description: |-
      Contract configuration and status management.
  - name: Vault
    description: |-
      Vault lifecycle management and configuration.
  - name: Vault - Contract Subscription
    description: |-
      Management of vault contract associations within vaults.
  - name: Vault - Document
    description: |-
      Documents management within vaults.
  - name: Vault - Estimate
    description: |-
      Payment estimation for vault-based financial operations.
  - name: Vault - Payment Collection
    description: |-
      Payment processing and transaction management for vault-based financial operations.

servers:
  - url: https://definancy.xboshy.io
    description: Stub server

paths:
  # Probes
  /api/v1/healthy:
    get:
      operationId: HealthyCheck
      summary: Health Check
      description: |-
        Verifies service liveness. Returns OK when operational.
      tags:
        - Probe
      responses:
        "200":
          description: |-
            OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /api/v1/ready:
    get:
      operationId: ReadyCheck
      summary: Ready Check
      description: |-
        Verifies service readiness. Returns OK when ready to accept traffic.
      tags:
        - Probe
      responses:
        "200":
          description: |-
            OK.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        default:
          $ref: "#/components/responses/DefaultResponse"

  # Network
  /api/v1/network:
    get:
      operationId: GetNetworks
      summary: List Networks
      description: |-
        Retrieves all configured networks.
      tags:
        - Network
      responses:
        "200":
          description: |-
            Successful retrieval of network configurations.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Network"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /api/v1/network/{networkId}:
    get:
      operationId: GetNetwork
      summary: Get Network
      description: |-
        Retrieves configuration details for a specific network.
      tags:
        - Network
      parameters:
        - $ref: "#/components/parameters/NetworkIdParam"
      responses:
        "200":
          description: |-
            Network details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Network"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"
    patch:
      operationId: ConfigNetwork
      summary: Configure Network
      description: |-
        Updates configuration parameters for a network.
      tags:
        - Network
      parameters:
        - $ref: "#/components/parameters/NetworkIdParam"

      requestBody:
        description: |-
          Network configuration parameters to update. Currently supports only the 'enabled' 
          field for controlling network availability. When setting 'enabled' to false, the 
          network will be disabled for new contract configurations and payment processing 
          while preserving all existing contracts, vault subscriptions, and historical 
          transaction data. Changes take effect immediately upon successful update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkConfig"
        required: true

      responses:
        "200":
          description: |-
            Network configuration updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Network"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "400":
          $ref: "#/components/responses/InvalidRequestResponse"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  # Asset
  /api/v1/asset:
    get:
      operationId: GetAssets
      summary: List Assets
      description: |-
        Retrieves all configured digital assets.
      tags:
        - Asset
      responses:
        "200":
          description: |-
            Asset list retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Asset"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /api/v1/asset/{assetUnit}:
    get:
      operationId: GetAsset
      summary: Get Asset
      description: |-
        Retrieves configuration details for a specific digital asset.
      tags:
        - Asset
      parameters:
        - $ref: "#/components/parameters/AssetUnitParam"
      responses:
        "200":
          description: |-
            Asset details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asset"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"
    patch:
      operationId: ConfigAsset
      summary: Configure Asset
      description: |-
        Updates configuration parameters for a digital asset.
      tags:
        - Asset
      parameters:
        - $ref: "#/components/parameters/AssetUnitParam"
      requestBody:
        description: |-
          Asset configuration parameters to update. Currently supports only the 'enabled' 
          field for controlling asset availability. When setting 'enabled' to false, the 
          asset will be disabled for new contract configurations and payment processing 
          while preserving all existing contracts, vault subscriptions, and historical 
          transaction data. Changes take effect immediately upon successful update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetConfig"
        required: true
      responses:
        "200":
          description: |-
            Asset configuration updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asset"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "400":
          $ref: "#/components/responses/InvalidRequestResponse"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  # Contract
  /api/v1/contract:
    get:
      operationId: GetContracts
      summary: List Contracts
      description: |-
        Retrieves all contract configurations.
      tags:
        - Contract
      responses:
        "200":
          description: |-
            Contract list retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Contract"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /api/v1/contract/{assetUnit}/{networkId}:
    get:
      operationId: GetContract
      summary: Get Contract
      description: |-
        Retrieves configuration details for a specific smart contract.
      tags:
        - Contract
      parameters:
        - $ref: "#/components/parameters/AssetUnitParam"
        - $ref: "#/components/parameters/NetworkIdParam"
      responses:
        "200":
          description: |-
            Contract information retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"
    patch:
      operationId: ConfigContract
      summary: Configure Contract
      description: |-
        Updates configuration parameters for a contract.
      tags:
        - Contract
      parameters:
        - $ref: "#/components/parameters/AssetUnitParam"
        - $ref: "#/components/parameters/NetworkIdParam"
      requestBody:
        description: |-
          Contract configuration parameters to update. Currently supports only the 'enabled' 
          field for controlling contract availability. When setting 'enabled' to false, the 
          contract will be disabled for new vault subscriptions and payment processing 
          while preserving all existing vault associations, payment collections, and 
          historical transaction data. Changes take effect immediately upon successful update.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContractConfig"
        required: true
      responses:
        "200":
          description: |-
            Contract configuration updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Contract"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "400":
          $ref: "#/components/responses/InvalidRequestResponse"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  # Vault
  /api/v1/vault:
    get:
      operationId: GetVaults
      summary: List Vaults
      description: |-
        Retrieves all vault configurations.
      tags:
        - Vault
      responses:
        "200":
          description: |-
            Vault list retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vault"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

  /api/v1/vault/{vaultId}:
    put:
      operationId: ConfigVault
      summary: Configure Vault
      description: |-
        Updates or creates the configuration for a vault. This operation will fully replace
        the existing configuration if the vault exists, or create a new vault if it does not.
      tags:
        - Vault
      parameters:
        - $ref: "#/components/parameters/VaultIdParam"
      requestBody:
        description: |-
          Partial vault configuration containing only the fields to be updated. The 'contract-ids'
          array can be used to modify vault subscriptions by adding or removing contract associations.
          The 'enabled' field can be used to activate or deactivate the vault for new operations.
          Only the provided fields will be modified, preserving all other existing configuration
          settings. All specified contracts must be active and properly configured.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultConfig"
        required: true
      responses:
        "200":
          description: |-
            Vault configuration updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vault"
          headers:
            Cache-Control:
              $ref: "#/components/headers/CacheControlHeader"
        "400":
          $ref: "#/components/responses/InvalidRequestResponse"
        "401":
          $ref: "#/components/responses/MissingAuthorizationResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        default:
          $ref: "#/components/responses/DefaultResponse"

components:
  headers:

    CacheControlHeader:
      description: |-
        Cache control directive instructing clients and intermediaries not to store
        response data due to sensitive financial and compliance information. This header
        is included in all successful responses to ensure that payment details, personal
        identification data, and transaction information are not cached by browsers,
        proxies, or other intermediaries for security and privacy protection.
      schema:
        type: string
        enum:
          - no-store

  parameters:
    NetworkIdParam:
      in: path
      name: networkId
      description: |-
        Unique identifier for a specific blockchain network (e.g., 'ethereum', 'polygon').
        Used to target operations on a particular network when managing contracts,
        assets, or vault subscriptions. Must match an existing configured network.
      schema:
        $ref: "#/components/schemas/NetworkId"
      required: true
    AssetUnitParam:
      in: path
      name: assetUnit
      description: |-
        Ticker symbol for a digital asset (e.g., 'USDC', 'ETH', 'BTC').
        Used to identify the specific cryptocurrency or token for contract operations,
        payment processing, and vault management. Must match an existing configured asset.
      schema:
        $ref: "#/components/schemas/AssetUnit"
      required: true
    VaultIdParam:
      in: path
      name: vaultId
      description: |-
        Unique identifier for a vault container that manages payment collections,
        documents, and contract subscriptions. Used across all vault-related operations
        including payment processing, document management, and configuration updates.
      schema:
        $ref: "#/components/schemas/VaultId"
      required: true
    PaymentCollectionIdParam:
      in: path
      name: paymentCollectionId
      description: |-
        Unique identifier for a payment collection within a vault. Used to track
        specific payment requests, monitor transaction status, manage associated
        documents, and retrieve payment history and compliance information.
      schema:
        $ref: "#/components/schemas/PaymentCollectionId"
      required: true
    DocumentIdParam:
      in: path
      name: documentId
      description: |-
        Unique identifier for a compliance document within a vault. Used for
        document retrieval, status checking, linking to payment collections,
        and managing the document verification lifecycle.
      schema:
        $ref: "#/components/schemas/DocumentId"
      required: true
  responses:
    MissingAuthorizationResponse:
      description: |-
        Authentication credentials are missing, invalid, or expired. The request lacks
        proper authorization headers or tokens. Clients should verify their authentication
        setup and ensure valid credentials are provided in subsequent requests.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorList"
    InvalidRequestResponse:
      description: |-
        The request contains malformed data, invalid parameters, or violates API constraints.
        This includes validation errors, incorrect data types, missing required fields,
        or values outside acceptable ranges. Check the error details for specific issues.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorList"
    ForbiddenResponse:
      description: |-
        The authenticated user lacks sufficient permissions to perform this operation.
        While authentication was successful, the user's role or access level does not
        permit the requested action. Contact an administrator for access rights.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorList"
    NotFoundResponse:
      description: |-
        The requested resource does not exist or has been removed. This may indicate
        an incorrect ID, a resource that was deleted, or a path that doesn't match
        any configured endpoints. Verify the resource identifier and try again.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorList"
    DefaultResponse:
      description: |-
        An unexpected server error occurred while processing the request. This indicates
        an internal system issue that prevented successful completion. The error details
        may provide additional context for debugging and support purposes.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorList"
  schemas:
    # Common
    FormalName:
      type: string
      description: |-
        Human-readable resource identifier that follows standard naming conventions
        for display purposes. Used for network names, asset names, and other user-facing
        identifiers that need to be presentable in user interfaces and documentation.
      minLength: 1
      maxLength: 32
    NetworkAddress:
      type: string
      description: |-
        Blockchain-specific address format used for cryptocurrency transactions.
        The exact format varies by network (e.g., Ethereum uses hexadecimal addresses
        starting with 0x, Bitcoin uses base58 encoding). Used for contract addresses,
        wallet addresses, and payment destinations.
      minLength: 1
      maxLength: 64
    UnsignedInteger:
      type: string
      description: |-
        String representation of a non-negative integer used for precise handling
        of large cryptocurrency amounts without floating-point precision issues.
        Supports values up to 78 digits to accommodate various token denominations
        and high-precision calculations.
      pattern: "^[0-9]+$"
      minLength: 1
      maxLength: 78
    Amount:
      type: object
      description: |-
        Precise representation of a cryptocurrency amount combining a raw value
        with decimal precision information. This structure ensures accurate
        handling of token amounts across different assets with varying decimal places.
      properties:
        value:
          $ref: "#/components/schemas/UnsignedInteger"
          description: |-
            Raw amount value in the smallest unit of the asset (e.g., wei for Ethereum).
        decimals:
          $ref: "#/components/schemas/Decimals"
          description: |-
            Number of decimal places to apply when displaying the amount to users.
      required:
        - value
        - decimals
    Decimals:
      type: integer
      description: |-
        Number of decimal places used for displaying cryptocurrency amounts.
        For example, USDC typically uses 6 decimals, while Ethereum uses 18.
        This determines how the raw value should be formatted for user presentation.
      minimum: 0
      maximum: 77
    Timestamp:
      type: integer
      description: |-
        UNIX timestamp in milliseconds representing a specific point in time.
        Used for tracking creation dates, expiration times, transaction timestamps,
        and other time-sensitive operations throughout the payment lifecycle.
      minimum: 0
    Enabled:
      type: boolean
      description: |-
        Boolean flag indicating whether a resource is active and operational.
        When true, the resource can be used for new operations. When false,
        the resource is disabled but historical data is preserved.
    URL:
      type: string
      description: |-
        Valid HTTP or HTTPS URL pointing to external resources such as
        asset websites, network documentation, or image assets. Must include
        the protocol scheme and be properly formatted for web access.
      format: uri
      pattern: "^https?://.+$"
    Version:
      type: object
      description: |-
        Version tracking metadata for resources that change over time.
        Provides sequence numbering and timestamps for creation and modification
        to support optimistic locking and change tracking.
      properties:
        sequence:
          type: integer
          description: |-
            Monotonically increasing version number that increments with each update.
            Used for optimistic concurrency control and change detection.
          minimum: 0
        created-at:
          $ref: "#/components/schemas/Timestamp"
          description: |-
            Timestamp when this resource was initially created.
        updated-at:
          $ref: "#/components/schemas/Timestamp"
          description: |-
            Timestamp when this resource was last modified.
      required:
        - sequence
        - created-at
        - updated-at
    UUID:
      type: string
      description: |-
        Universally unique identifier (UUID version 4) used for resources
        that require globally unique identification. Provides 128-bit uniqueness
        suitable for distributed systems and cross-system integration.
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      minLength: 36
      maxLength: 36
      format: uuid
    Date:
      type: string
      description: |-
        Calendar date in ISO 8601 format (YYYY-MM-DD) without time information.
        Used for birth dates, incorporation dates, and other date-only fields
        in compliance documentation and identity verification.
      pattern: "^[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])$"
      minLength: 10
      maxLength: 10
    Street:
      type: string
      description: |-
        Complete street address including building number, street name, apartment
        or suite information. Used in compliance documents for physical address
        verification and identity confirmation processes.
      minLength: 1
      maxLength: 200
    PostalCode:
      type: string
      description: |-
        Geographic postal or ZIP code for address verification. Format varies
        by country (e.g., 5-digit ZIP codes in US, alphanumeric postal codes
        in Canada). Used for compliance and identity verification.
      minLength: 1
      maxLength: 20
    Region:
      type: string
      description: |-
        Administrative subdivision such as state, province, prefecture, or region.
        Used in address information for compliance documents and geographic
        identification in identity verification processes.
      minLength: 1
      maxLength: 40
    Country:
      type: string
      description: |-
        Country name or ISO 3166-1 alpha-2 country code for geographic identification.
        Used in address information, birth records, and incorporation details
        for compliance and identity verification purposes.
      minLength: 1
      maxLength: 40
    Note:
      type: string
      description: |-
        Optional free-form text field for additional context, remarks, or
        annotations. Provides flexibility for storing supplementary information
        that doesn't fit into structured fields.
      maxLength: 800
    # Status/Error
    Status:
      type: object
      description: |-
        Simple service status response used by health and readiness endpoints
        to indicate operational state. Provides a standardized way to communicate
        service availability to monitoring systems and load balancers.
      properties:
        status:
          type: string
          description: |-
            Service status indicator. Typically returns "ok" when the service
            is operational and ready to handle requests.
          minLength: 1
          maxLength: 8
      required:
        - status
      example:
        status: "ok"
    Error:
      type: object
      description: |-
        Standardized error response structure providing categorized error codes
        and human-readable messages. Used consistently across all API endpoints
        to help clients understand and handle different types of failures.
      properties:
        code:
          type: string
          description: |-
            Structured error code in AAA-999 format where AAA represents the error
            category (e.g., AUT for authentication, VAL for validation) and 999
            is a specific error number. Used for programmatic error handling.
          pattern: "^[a-zA-Z]{3}-[0-9]{3}$"
          minLength: 7
          maxLength: 7
        message:
          type: string
          description: |-
            Human-readable error description explaining what went wrong and
            potentially how to resolve the issue. Suitable for displaying
            to end users or logging for debugging purposes.
          minLength: 1
          maxLength: 256
      required:
        - code
        - message
      example:
        code: "AUT-401"
        message: "Missing authorization token"
    NetworkId:
      type: string
      description: |-
        Unique lowercase alphanumeric identifier for a blockchain network.
        Examples include 'ethereum' for Ethereum mainnet, 'polygon' for Polygon,
        or 'bsc' for Binance Smart Chain. Used throughout the API to specify
        which blockchain network operations should target.
      pattern: "^[a-z0-9]+$"
      minLength: 1
      maxLength: 32
    NetworkStatus:
      type: string
      description: |-
        Operational status of a blockchain network indicating its availability
        for new operations and payment processing.
      enum:
        - active       # Network is fully operational and accepting new transactions
        - inactive     # Network is temporarily disabled but may be reactivated
        - discontinued # Network is permanently discontinued and will not be reactivated
    NetworkInfo:
      type: object
      description: |-
        Comprehensive metadata about a blockchain network including display
        information, operational status, supported assets, and version tracking.
        Provides all information needed to understand network capabilities.
      properties:
        name:
          $ref: "#/components/schemas/FormalName"
        image:
          $ref: "#/components/schemas/URL"
        website:
          $ref: "#/components/schemas/URL"
        status:
          $ref: "#/components/schemas/NetworkStatus"
        assets:
          type: array
          items:
            $ref: "#/components/schemas/AssetUnit"
        version:
          $ref: "#/components/schemas/Version"
      required:
        - name
        - image
        - website
        - status
        - assets
        - version
    NetworkConfig:
      type: object
      description: |-
        Configuration parameters that control network behavior and availability.
        Currently supports enabling/disabling the network for new operations
        while preserving existing data and configurations.
      properties:
        enabled:
          $ref: "#/components/schemas/Enabled"
          description: |-
            Controls whether this network is available for new contract configurations
            and payment processing. Defaults to true when not specified.
    Network:
      type: object
      description: |-
        Complete blockchain network definition combining identification, metadata,
        and configuration. Represents a supported blockchain that can host
        smart contracts and process cryptocurrency payments.
      properties:
        id:
          $ref: "#/components/schemas/NetworkId"
        info:
          $ref: "#/components/schemas/NetworkInfo"
        config:
          $ref: "#/components/schemas/NetworkConfig"
      required:
        - id
        - info
        - config
    Asset:
      type: object
      description: |-
        Complete digital asset definition combining identification, metadata, and configuration.
        Represents a supported cryptocurrency or token that can be used in smart contracts
        and payment processing across multiple blockchain networks.
      properties:
        unit:
          $ref: "#/components/schemas/AssetUnit"
        info:
          $ref: "#/components/schemas/AssetInfo"
        config:
          $ref: "#/components/schemas/AssetConfig"
      required:
        - unit
        - info
        - config
    ContractId:
      type: object
      description: |-
        Composite identifier uniquely identifying a smart contract by combining
        the asset it handles with the blockchain network where it's deployed.
        This combination ensures contracts are uniquely identified across all
        supported networks and assets.
      properties:
        asset-unit:
          $ref: "#/components/schemas/AssetUnit"
        network-id:
          $ref: "#/components/schemas/NetworkId"
      required:
        - asset-unit
        - network-id
    ContractStatus:
      type: string
      description: |-
        Operational status of a smart contract indicating its availability
        for vault subscriptions and payment processing.
      enum:
        - "active"       # Contract is fully operational and available for new vault subscriptions
        - "inactive"     # Contract is temporarily disabled but may be reactivated
        - "discontinued" # Contract is permanently discontinued and will not be reactivated
    ContractInfo:
      type: object
      description: |-
        Comprehensive metadata about a smart contract including deployment details,
        subscribed vaults, operational status, and version tracking. Provides all
        information needed to understand contract capabilities and current usage.
      properties:
        vaults:
          type: array
          description: |-
            List of vault identifiers that are currently subscribed to this contract
            and can process payments using it.
          items:
            $ref: "#/components/schemas/VaultId"
        address:
          $ref: "#/components/schemas/NetworkAddress"
        decimals:
          $ref: "#/components/schemas/Decimals"
        note:
          $ref: "#/components/schemas/Note"
        status:
          $ref: "#/components/schemas/ContractStatus"
        version:
          $ref: "#/components/schemas/Version"
      required:
        - vaults
        - address
        - decimals
        - status
        - version
    ContractConfig:
      type: object
      description: |-
        Configuration parameters that control smart contract behavior and availability.
        Currently supports enabling/disabling the contract for new operations
        while preserving existing vault subscriptions and historical data.
      properties:
        enabled:
          $ref: "#/components/schemas/Enabled"
    Contract:
      type: object
      description: |-
        Complete smart contract definition combining identification, metadata, and configuration. Represents a deployed contract that can process payments for a specific asset on a specific blockchain network.
      properties:
        id:
          $ref: "#/components/schemas/ContractId"
        info:
          $ref: "#/components/schemas/ContractInfo"
        config:
          $ref: "#/components/schemas/ContractConfig"
      required:
        - id
        - info
        - config
    ContractAmount:
      type: object
      description: |-
        Pairing of a specific smart contract with a precise amount value.
        Used throughout the API to specify payment amounts for particular
        contracts in estimates, payment collections, and transaction records.
      properties:
        contract-id:
          $ref: "#/components/schemas/ContractId"
        amount:
          $ref: "#/components/schemas/Amount"
      required:
        - contract-id
        - amount
    # Vault - Estimate
    Estimate:
      type: object
      description: |-
        Comprehensive payment estimation result providing calculated scenarios
        and compliance requirements for requested contract amounts. Generated
        in real-time to reflect current network conditions and fee structures.
      properties:
        ts:
          $ref: "#/components/schemas/Timestamp"
        scenarios:
          type: array
          items:
            $ref: "#/components/schemas/EstimateScenario"
        compliance:
          $ref: "#/components/schemas/Compliance"
      required:
        - ts
        - scenarios
        - compliance
    EstimateScenario:
      type: object
      description: |-
        Individual payment calculation scenario showing the relationship between
        requested amounts and actual payment requirements including fees,
        conversions, and network-specific adjustments.
      properties:
        price:
          $ref: "#/components/schemas/ContractAmount"
        pay:
          $ref: "#/components/schemas/ContractAmount"
      required:
        - price
        - pay
    PersonAddress:
      type: object
      description: |-
        Complete physical address information used for identity verification
        and compliance documentation. Includes all components necessary for
        address validation and geographic identification.
      properties:
        street:
          $ref: "#/components/schemas/Street"
        postal-code:
          $ref: "#/components/schemas/PostalCode"
        region:
          $ref: "#/components/schemas/Region"
        country:
          $ref: "#/components/schemas/Country"
      required:
        - street
        - postal-code
        - region
        - country
    PersonV1:
      type: object
      description: |-
        Base identification document data common to both natural and legal persons.
      properties:
        name:
          $ref: "#/components/schemas/FormalName"
        address:
          $ref: "#/components/schemas/PersonAddress"
    PersonNaturalV1:
      allOf:
        - $ref: "#/components/schemas/PersonV1"
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/PersonNaturalId"
            birth:
              $ref: "#/components/schemas/PersonNaturalBirth"
          required:
            - id
            - birth
    PersonNaturalId:
      type: object
      description: |-
        Government-issued identification document details for individual
        identity verification including document number, type, and issuing authority.
      properties:
        number:
          $ref: "#/components/schemas/PersonNaturalIdNumber"
        type:
          $ref: "#/components/schemas/PersonNaturalIdType"
        issuer:
          $ref: "#/components/schemas/PersonNaturalIdIssuer"
      required:
        - number
        - type
        - issuer
    PersonNaturalIdNumber:
      type: string
      minLength: 1
      maxLength: 120
    PersonNaturalIdType:
      type: string
      enum:
        - "NationalIdentityCard"
        - "Passport"
    PersonNaturalIdIssuer:
      type: string
      minLength: 1
      maxLength: 40
    PersonNaturalBirth:
      type: object
      properties:
        date:
          $ref: "#/components/schemas/Date"
        region:
          $ref: "#/components/schemas/Region"
        country:
          $ref: "#/components/schemas/Country"
      required:
        - date
        - region
        - country
    PersonLegalV1:
      allOf:
        - $ref: "#/components/schemas/PersonV1"
        - type: object
          properties:
            id:
              $ref: "#/components/schemas/PersonLegalId"
            incorporation:
              $ref: "#/components/schemas/PersonLegalIncorporation"
          required:
            - id
            - incorporation
    PersonLegalId:
      type: object
      description: |-
        Legal entity identification information including business registration
        numbers, tax identifiers, and issuing authorities for compliance verification.
      properties:
        number:
          $ref: "#/components/schemas/PersonLegalIdNumber"
        type:
          $ref: "#/components/schemas/PersonLegalIdType"
        issuer:
          $ref: "#/components/schemas/PersonLegalIdIssuer"
      required:
        - number
        - type
        - issuer
    PersonLegalIdNumber:
      type: string
      minLength: 1
      maxLength: 120
    PersonLegalIdType:
      type: string
      enum:
        - "TaxId"
    PersonLegalIdIssuer:
      type: string
      minLength: 1
      maxLength: 40
    PersonLegalIncorporation:
      type: object
      properties:
        date:
          $ref: "#/components/schemas/Date"
        region:
          $ref: "#/components/schemas/Region"
        country:
          $ref: "#/components/schemas/Country"
      required:
        - date
        - region
        - country
    CustodialV1:
      type: object
      properties:
        provider:
          $ref: "#/components/schemas/FormalName"
    NonCustodialV1:
      type: object
      properties:
        address:
          $ref: "#/components/schemas/NetworkAddress"
      required:
        - address
    # Vault - Payment Collection - Compliance
    Compliance:
      type: object
      properties:
        scenarios:
          type: array
          items:
            $ref: "#/components/schemas/ComplianceScenario"
      required:
        - scenarios
    ComplianceScenario:
      type: object
      properties:
        contract-id:
          $ref: "#/components/schemas/ContractId"
        required:
          type: array
          items:
            $ref: "#/components/schemas/DocumentType"
        submitted:
          type: array
          items:
            $ref: "#/components/schemas/DocumentId"
        status:
          $ref: "#/components/schemas/ComplianceScenarioStatus"
      required:
        - contract-id
        - required
        - status
    ComplianceScenarioStatus:
      type: string
      enum:
        - pending
        - accepted
    # Vault - Payment Collection
    PaymentCollectionId:
      $ref: "#/components/schemas/UUID"
    PaymentCollectionOrder:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        schema:
          type: object
          additionalProperties: true
        data:
          type: object
          additionalProperties: true
    PaymentCollectionInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/PaymentCollectionStatus"
        version:
          $ref: "#/components/schemas/Version"
        scenarios:
          type: array
          items:
            $ref: "#/components/schemas/PaymentCollectionScenario"
        compliance:
          $ref: "#/components/schemas/Compliance"
      required:
        - status
        - version
        - scenarios
        - compliance
    PaymentCollectionConfig:
      type: object
      properties:
        order:
          $ref: "#/components/schemas/PaymentCollectionOrder"
        price-scenarios:
          type: array
          items:
            $ref: "#/components/schemas/ContractAmount"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/DocumentId"
    PaymentCollection:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/PaymentCollectionId"
        info:
          $ref: "#/components/schemas/PaymentCollectionInfo"
        config:
          $ref: "#/components/schemas/PaymentCollectionConfig"
      required:
        - id
        - info
        - config
    PaymentCollectionStatus:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/PaymentCollectionStatusId"
        info:
          $ref: "#/components/schemas/PaymentCollectionStatusInfo"
      required:
        - id
        - info
    PaymentCollectionStatusId:
      type: string
      enum:
        - "compliance"
        - "waiting"
        - "confirming"
        - "confirmed"
        - "expired"
        - "cancelled"
    PaymentCollectionStatusInfo:
      type: string
      minLength: 0
      maxLength: 400
    PaymentCollectionScenario:
      type: object
      properties:
        price:
          $ref: "#/components/schemas/ContractAmount"
        pay:
          $ref: "#/components/schemas/ContractAmount"
        address:
          $ref: "#/components/schemas/NetworkAddress"
        expire-at:
          $ref: "#/components/schemas/Timestamp"
        status:
          $ref: "#/components/schemas/PaymentCollectionScenarioStatus"
        received:
          $ref: "#/components/schemas/ContractAmount"
        transaction-list:
          type: array
          items:
            $ref: "#/components/schemas/BlockchainTransaction"
      required:
        - price
        - pay
        - address
        - expire-at
        - status
        - received
        - transaction-list
    PaymentCollectionScenarioStatus:
      type: string
      enum:
        - "compliance"
        - "waiting"
        - "confirming"
        - "confirmed"
        - "expired"
        - "refunding"
        - "refunded"
    # Blockchain
    BlockchainTransactionId:
      type: string
      description: |-
        Unique blockchain transaction hash identifier used to track and verify
        transactions on the network. This hash serves as the definitive reference
        for locating transactions in blockchain explorers and verification systems.
    BlockchainTransactionStatus:
      type: string
      description: |-
        Current confirmation status of a blockchain transaction indicating
        its processing state from initial detection through final confirmation.
      enum:
        - "compliance" # Transaction detected but compliance verification required
        - "waiting"    # Transaction submitted to network, awaiting initial confirmation
        - "confirming" # Transaction confirmed but waiting for additional confirmations
        - "confirmed"  # Transaction fully confirmed with sufficient network consensus
    BlockchainConfirmations:
      type: integer
      description: |-
        Number of blockchain confirmations observed for a transaction, indicating
        the level of network consensus and security. Higher numbers provide
        greater confidence in transaction finality.
      minimum: 0
      maximum: 65535
    BlockchainConfirmationStats:
      type: object
      description: |-
        Confirmation progress information for transactions in the confirming state,
        providing current status and estimated completion time for full confirmation.
      properties:
        confirmed:
          $ref: "#/components/schemas/BlockchainConfirmations"
          description: |-
            Number of confirmations currently observed for this transaction.
        remaining:
          $ref: "#/components/schemas/BlockchainConfirmations"
          description: |-
            Number of additional confirmations needed to reach the required threshold.
        eta:
          $ref: "#/components/schemas/Timestamp"
          description: |-
            Estimated timestamp when the transaction will reach full confirmation
            based on network block time averages.
      required:
        - confirmed
        - remaining
        - eta
    BlockchainTransaction:
      type: object
      description: |-
        Complete blockchain transaction record including addresses, amounts,
        timestamps, and confirmation status for comprehensive payment tracking
        and verification throughout the transaction lifecycle.
      properties:
        id:
          $ref: "#/components/schemas/BlockchainTransactionId"
          description: |-
            Unique transaction hash identifier on the blockchain.
        ts:
          $ref: "#/components/schemas/Timestamp"
          description: |-
            Timestamp when this transaction was first detected or submitted.
        sender:
          $ref: "#/components/schemas/NetworkAddress"
          description: |-
            Blockchain address that initiated and sent this transaction.
        receiver:
          $ref: "#/components/schemas/NetworkAddress"
          description: |-
            Blockchain address that received the funds from this transaction.
        amount:
          $ref: "#/components/schemas/ContractAmount"
          description: |-
            Precise amount transferred in this transaction with contract context.
        status:
          $ref: "#/components/schemas/BlockchainTransactionStatus"
          description: |-
            Current confirmation and processing status of this transaction.
        confirmation-stats:
          $ref: "#/components/schemas/BlockchainConfirmationStats"
          description: |-
            Detailed confirmation progress and timing information.
      required:
        - id
        - ts
        - sender
        - receiver
        - amount
        - status
        - confirmation-stats
